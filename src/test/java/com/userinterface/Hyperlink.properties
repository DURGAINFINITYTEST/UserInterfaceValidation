import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

public class HomePage {
    private WebDriver driver;

    @FindBy(id = "linkElement")
    private WebElement linkElement;

    public HomePage(WebDriver driver) {
        this.driver = driver;
        PageFactory.initElements(driver, this);
    }

    public String getLinkColor() {
        return linkElement.getCssValue("color");
    }
}


Step 2: Create Test Class

Create a new Java class for the test, e.g., "HyperlinkColorTest.java".
In the "HyperlinkColorTest" class, set up the WebDriver, initialize the HomePage object, and write test methods for hyperlink color validation.
java
Copy code
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class HyperlinkColorTest {
    private WebDriver driver;
    private HomePage homePage;

    @BeforeClass
    public void setUp() {
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        driver = new ChromeDriver();
        driver.get("your_application_url");
        homePage = new HomePage(driver);
    }

    @Test
    public void testHyperlinkColor() {
        String linkColor = homePage.getLinkColor();

        // Perform validation based on the expected hyperlink color
        Assert.assertEquals(linkColor, expectedColor, "Hyperlink color is not as expected.");
    }

    // Add more test methods to validate the color of other hyperlinks as needed

    @AfterClass
    public void tearDown() {
        driver.quit();
    }
}